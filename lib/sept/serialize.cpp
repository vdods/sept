// 2020.08.02 - Victor Dods

#include "sept/serialize.hpp"

#include "sept/ArrayTerm.hpp"
#include "sept/ArrayType.hpp"
#include "sept/ctl/ClearOutput.hpp"
#include "sept/ctl/EndOfFile.hpp"
#include "sept/ctl/Output.hpp"
#include "sept/ctl/RequestSyncInput.hpp"
#include "sept/NPTerm.hpp"
#include "sept/NPType.hpp"
#include "sept/OrderedMapTerm.hpp"
#include "sept/OrderedMapType.hpp"
#include <sstream>

namespace sept {

void serialize_data (Data const &value, std::ostream &out) {
    auto it = _serialize::SERIALIZE__EVALUATOR_MAP.find(std::type_index(value.type()));
    if (it == _serialize::SERIALIZE__EVALUATOR_MAP.end())
        throw std::runtime_error(LVD_FMT("serialize not defined for " << value.type()));

    auto const &evaluator = it->second;
    evaluator(value, out);
}

namespace _serialize {

std::unordered_map<Serialize_TypeKey,Serialize_Evaluator> SERIALIZE__EVALUATOR_MAP;

//
// These globals are what register the Serialize_Evaluator functions.
//

#define SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Type) Serialize_EvaluatorRegistration_t<Type> Type##_{ \
    [](Data const &value_, std::ostream &out) -> void { \
        auto const &value = value_.cast<Type const &>(); \
        serialize(value, out); \
    } \
};
#define SEPT_REGISTER_SERIALIZE_EVALUATOR(Type,EvaluatorExpression) Serialize_EvaluatorRegistration_t<Type> Type##_{ \
    [](Data const &value_, std::ostream &out) -> void { \
        auto const &value = value_.cast<Type const &>(); \
        std::ignore = value; \
        EvaluatorExpression \
    } \
};

//
// Use the specific-C++-typed overloads of serialize to define the Data-typed serialize.
//

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Term_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(NonParametricTerm_c)
// SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ParametricTerm_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(NonType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(NonParametricType_c)
// SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ParametricType_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Void_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(True_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(False_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(VoidType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(TrueType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(FalseType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(EmptyType_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Bool_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint8_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint16_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint32_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint64_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint8_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint16_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint32_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint64_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Float32_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Float64_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(bool)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(char) // Apparently typeid(char) != typeid(int8_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(int8_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(int16_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(int32_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(int64_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(uint8_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(uint16_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(uint32_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(uint64_t)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(float)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(double)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(BoolType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint8Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint16Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint32Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Sint64Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint8Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint16Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint32Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Uint64Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Float32Type_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Float64Type_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArrayES_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArrayE_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArrayS_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Array_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArrayType_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArrayESTerm_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArrayETerm_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArraySTerm_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ArrayTerm_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapDC_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapD_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapC_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMap_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapType_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapDCTerm_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapDTerm_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapCTerm_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OrderedMapTerm_c)

// This is necessary because using :: interferes with the macro.
using namespace ctl;

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OutputType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(Output_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(OutputTerm_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ClearOutputType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(ClearOutput_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(EndOfFileType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(EndOfFile_c)

SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(RequestSyncInputType_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(RequestSyncInput_c)
SEPT_REGISTER_SERIALIZE_EVALUATOR_DEFAULT(RequestSyncInputTerm_c)

} // end namespace _serialize
} // end namespace sept
