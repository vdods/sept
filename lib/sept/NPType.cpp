// 2020.04.17 - Victor Dods

#include "sept/NPType.hpp"

namespace sept {

Term_c Term;
NonParametricType_c NonParametricType;
Type_c Type;
NonType_c NonType;
EmptyType_c EmptyType;
VoidType_c VoidType;
TrueType_c TrueType;
FalseType_c FalseType;
Bool_c Bool;
Sint8_c Sint8;
Sint16_c Sint16;
Sint32_c Sint32;
Sint64_c Sint64;
Uint8_c Uint8;
Uint16_c Uint16;
Uint32_c Uint32;
Uint64_c Uint64;
Float32_c Float32;
Float64_c Float64;
BoolType_c BoolType;
Sint8Type_c Sint8Type;
Sint16Type_c Sint16Type;
Sint32Type_c Sint32Type;
Sint64Type_c Sint64Type;
Uint8Type_c Uint8Type;
Uint16Type_c Uint16Type;
Uint32Type_c Uint32Type;
Uint64Type_c Uint64Type;
Float32Type_c Float32Type;
Float64Type_c Float64Type;

//
// Registrations for Data functions
//

SEPT__REGISTER__PRINT(Term_c)
SEPT__REGISTER__PRINT(Type_c)
SEPT__REGISTER__PRINT(NonType_c)
SEPT__REGISTER__PRINT(NonParametricType_c)
SEPT__REGISTER__PRINT(EmptyType_c)
SEPT__REGISTER__PRINT(VoidType_c)
SEPT__REGISTER__PRINT(TrueType_c)
SEPT__REGISTER__PRINT(FalseType_c)
SEPT__REGISTER__PRINT(Bool_c)
SEPT__REGISTER__PRINT(Sint8_c)
SEPT__REGISTER__PRINT(Sint16_c)
SEPT__REGISTER__PRINT(Sint32_c)
SEPT__REGISTER__PRINT(Sint64_c)
SEPT__REGISTER__PRINT(Uint8_c)
SEPT__REGISTER__PRINT(Uint16_c)
SEPT__REGISTER__PRINT(Uint32_c)
SEPT__REGISTER__PRINT(Uint64_c)
SEPT__REGISTER__PRINT(Float32_c)
SEPT__REGISTER__PRINT(Float64_c)
SEPT__REGISTER__PRINT(BoolType_c)
SEPT__REGISTER__PRINT(Sint8Type_c)
SEPT__REGISTER__PRINT(Sint16Type_c)
SEPT__REGISTER__PRINT(Sint32Type_c)
SEPT__REGISTER__PRINT(Sint64Type_c)
SEPT__REGISTER__PRINT(Uint8Type_c)
SEPT__REGISTER__PRINT(Uint16Type_c)
SEPT__REGISTER__PRINT(Uint32Type_c)
SEPT__REGISTER__PRINT(Uint64Type_c)
SEPT__REGISTER__PRINT(Float32Type_c)
SEPT__REGISTER__PRINT(Float64Type_c)

SEPT__REGISTER__EQ(Term_c)
SEPT__REGISTER__EQ(Type_c)
SEPT__REGISTER__EQ(NonType_c)
SEPT__REGISTER__EQ(NonParametricType_c)
SEPT__REGISTER__EQ(EmptyType_c)
SEPT__REGISTER__EQ(VoidType_c)
SEPT__REGISTER__EQ(TrueType_c)
SEPT__REGISTER__EQ(FalseType_c)
SEPT__REGISTER__EQ(Bool_c)
SEPT__REGISTER__EQ(Sint8_c)
SEPT__REGISTER__EQ(Sint16_c)
SEPT__REGISTER__EQ(Sint32_c)
SEPT__REGISTER__EQ(Sint64_c)
SEPT__REGISTER__EQ(Uint8_c)
SEPT__REGISTER__EQ(Uint16_c)
SEPT__REGISTER__EQ(Uint32_c)
SEPT__REGISTER__EQ(Uint64_c)
SEPT__REGISTER__EQ(Float32_c)
SEPT__REGISTER__EQ(Float64_c)
SEPT__REGISTER__EQ(BoolType_c)
SEPT__REGISTER__EQ(Sint8Type_c)
SEPT__REGISTER__EQ(Sint16Type_c)
SEPT__REGISTER__EQ(Sint32Type_c)
SEPT__REGISTER__EQ(Sint64Type_c)
SEPT__REGISTER__EQ(Uint8Type_c)
SEPT__REGISTER__EQ(Uint16Type_c)
SEPT__REGISTER__EQ(Uint32Type_c)
SEPT__REGISTER__EQ(Uint64Type_c)
SEPT__REGISTER__EQ(Float32Type_c)
SEPT__REGISTER__EQ(Float64Type_c)


SEPT__REGISTER__ABSTRACT_TYPE_OF(Term_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(NonParametricTerm_c)
// SEPT__REGISTER__ABSTRACT_TYPE_OF(ParametricTerm_c)

SEPT__REGISTER__ABSTRACT_TYPE_OF(Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(NonType_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(NonParametricType_c)
// SEPT__REGISTER__ABSTRACT_TYPE_OF(ParametricType_c)

SEPT__REGISTER__ABSTRACT_TYPE_OF(Void_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(True_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(False_c)

SEPT__REGISTER__ABSTRACT_TYPE_OF(VoidType_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(TrueType_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(FalseType_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(EmptyType_c)

SEPT__REGISTER__ABSTRACT_TYPE_OF(Bool_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint8_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint16_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint32_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint64_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint8_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint16_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint32_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint64_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Float32_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Float64_c)

SEPT__REGISTER__ABSTRACT_TYPE_OF(bool)
SEPT__REGISTER__ABSTRACT_TYPE_OF(int8_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(int16_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(int32_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(int64_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(uint8_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(uint16_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(uint32_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(uint64_t)
SEPT__REGISTER__ABSTRACT_TYPE_OF(float)
SEPT__REGISTER__ABSTRACT_TYPE_OF(double)

SEPT__REGISTER__ABSTRACT_TYPE_OF(BoolType_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint8Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint16Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint32Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Sint64Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint8Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint16Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint32Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Uint64Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Float32Type_c)
SEPT__REGISTER__ABSTRACT_TYPE_OF(Float64Type_c)



SEPT__REGISTER__INHABITS(Void_c, VoidType_c)
// TODO: In the future, derived "inhabits" relationships (where x : T <: U, i.e. T is a subtype of U)
// should/could be computed using the poset of subtype relationships.
SEPT__REGISTER__INHABITS(Void_c, NonParametricTerm_c)
SEPT__REGISTER__INHABITS(Void_c, NonType_c)

SEPT__REGISTER__INHABITS(VoidType_c, NonParametricTerm_c)
SEPT__REGISTER__INHABITS(VoidType_c, Type_c)
SEPT__REGISTER__INHABITS(VoidType_c, NonParametricType_c)

SEPT__REGISTER__INHABITS(True_c, TrueType_c)
SEPT__REGISTER__INHABITS(False_c, FalseType_c)
SEPT__REGISTER__INHABITS(True_c, Bool_c)
SEPT__REGISTER__INHABITS(False_c, Bool_c)
SEPT__REGISTER__INHABITS(BoolTerm_c, Bool_c)
SEPT__REGISTER__INHABITS(bool, Bool_c) // bool and BoolTerm_c are equivalent
SEPT__REGISTER__INHABITS__EVALUATOR_BODY(BoolTerm_c, TrueType_c, return value == true; )
SEPT__REGISTER__INHABITS__EVALUATOR_BODY(BoolTerm_c, FalseType_c, return value == false; )
SEPT__REGISTER__INHABITS__EVALUATOR_BODY(bool, TrueType_c, return value == true; )
SEPT__REGISTER__INHABITS__EVALUATOR_BODY(bool, FalseType_c, return value == false; )
SEPT__REGISTER__INHABITS(Bool_c, BoolType_c)
SEPT__REGISTER__INHABITS(TrueType_c, BoolType_c) // TrueType is a subtype of Bool
SEPT__REGISTER__INHABITS(FalseType_c, BoolType_c) // FalseType is a subtype of Bool

SEPT__REGISTER__INHABITS(int8_t, Sint8_c)
SEPT__REGISTER__INHABITS(int16_t, Sint16_c)
SEPT__REGISTER__INHABITS(int32_t, Sint32_c)
SEPT__REGISTER__INHABITS(int64_t, Sint64_c)
SEPT__REGISTER__INHABITS(Sint8_c, Sint8Type_c)
SEPT__REGISTER__INHABITS(Sint16_c, Sint16Type_c)
SEPT__REGISTER__INHABITS(Sint32_c, Sint32Type_c)
SEPT__REGISTER__INHABITS(Sint64_c, Sint64Type_c)

SEPT__REGISTER__INHABITS(uint8_t, Uint8_c)
SEPT__REGISTER__INHABITS(uint16_t, Uint16_c)
SEPT__REGISTER__INHABITS(uint32_t, Uint32_c)
SEPT__REGISTER__INHABITS(uint64_t, Uint64_c)
SEPT__REGISTER__INHABITS(Uint8_c, Uint8Type_c)
SEPT__REGISTER__INHABITS(Uint16_c, Uint16Type_c)
SEPT__REGISTER__INHABITS(Uint32_c, Uint32Type_c)
SEPT__REGISTER__INHABITS(Uint64_c, Uint64Type_c)

SEPT__REGISTER__INHABITS(float, Float32_c)
SEPT__REGISTER__INHABITS(double, Float64_c)
SEPT__REGISTER__INHABITS(Float32_c, Float32Type_c)
SEPT__REGISTER__INHABITS(Float64_c, Float64Type_c)

SEPT__REGISTER__INHABITS(Term_c, Type_c)
SEPT__REGISTER__INHABITS(NonParametricTerm_c, Type_c)
// SEPT__REGISTER__INHABITS(ParametricTerm_c, Type_c)

SEPT__REGISTER__INHABITS(Type_c, Type_c)
SEPT__REGISTER__INHABITS(NonType_c, Type_c)
SEPT__REGISTER__INHABITS(NonParametricType_c, Type_c)
// SEPT__REGISTER__INHABITS(ParametricType_c, Type_c)


SEPT__REGISTER__COMPARE__SINGLETON(Term_c)
// SEPT__REGISTER__COMPARE__SINGLETON(ParametricTerm_c)
SEPT__REGISTER__COMPARE__SINGLETON(Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(NonType_c)
SEPT__REGISTER__COMPARE__SINGLETON(NonParametricType_c)
// SEPT__REGISTER__COMPARE__SINGLETON(ParametricType_c)
SEPT__REGISTER__COMPARE__SINGLETON(VoidType_c)
SEPT__REGISTER__COMPARE__SINGLETON(TrueType_c)
SEPT__REGISTER__COMPARE__SINGLETON(FalseType_c)
SEPT__REGISTER__COMPARE__SINGLETON(EmptyType_c)
SEPT__REGISTER__COMPARE__SINGLETON(Bool_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint8_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint16_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint32_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint64_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint8_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint16_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint32_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint64_c)
SEPT__REGISTER__COMPARE__SINGLETON(Float32_c)
SEPT__REGISTER__COMPARE__SINGLETON(Float64_c)
SEPT__REGISTER__COMPARE(bool, bool)
SEPT__REGISTER__COMPARE(int8_t, int8_t)
SEPT__REGISTER__COMPARE(int16_t, int16_t)
SEPT__REGISTER__COMPARE(int32_t, int32_t)
SEPT__REGISTER__COMPARE(int64_t, int64_t)
SEPT__REGISTER__COMPARE(uint8_t, uint8_t)
SEPT__REGISTER__COMPARE(uint16_t, uint16_t)
SEPT__REGISTER__COMPARE(uint32_t, uint32_t)
SEPT__REGISTER__COMPARE(uint64_t, uint64_t)
SEPT__REGISTER__COMPARE(float, float)
SEPT__REGISTER__COMPARE(double, double)
SEPT__REGISTER__COMPARE__SINGLETON(BoolType_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint8Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint16Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint32Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Sint64Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint8Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint16Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint32Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Uint64Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Float32Type_c)
SEPT__REGISTER__COMPARE__SINGLETON(Float64Type_c)


SEPT__REGISTER__SERIALIZE(Term_c)
// SEPT__REGISTER__SERIALIZE(ParametricTerm_c)
SEPT__REGISTER__SERIALIZE(Type_c)
SEPT__REGISTER__SERIALIZE(NonType_c)
SEPT__REGISTER__SERIALIZE(NonParametricType_c)
// SEPT__REGISTER__SERIALIZE(ParametricType_c)
SEPT__REGISTER__SERIALIZE(BoolTerm_c)
SEPT__REGISTER__SERIALIZE(VoidType_c)
SEPT__REGISTER__SERIALIZE(TrueType_c)
SEPT__REGISTER__SERIALIZE(FalseType_c)
SEPT__REGISTER__SERIALIZE(EmptyType_c)
SEPT__REGISTER__SERIALIZE(Bool_c)
SEPT__REGISTER__SERIALIZE(Sint8_c)
SEPT__REGISTER__SERIALIZE(Sint16_c)
SEPT__REGISTER__SERIALIZE(Sint32_c)
SEPT__REGISTER__SERIALIZE(Sint64_c)
SEPT__REGISTER__SERIALIZE(Uint8_c)
SEPT__REGISTER__SERIALIZE(Uint16_c)
SEPT__REGISTER__SERIALIZE(Uint32_c)
SEPT__REGISTER__SERIALIZE(Uint64_c)
SEPT__REGISTER__SERIALIZE(Float32_c)
SEPT__REGISTER__SERIALIZE(Float64_c)
SEPT__REGISTER__SERIALIZE(bool)
SEPT__REGISTER__SERIALIZE(char) // Apparently typeid(char) != typeid(int8_t)
SEPT__REGISTER__SERIALIZE(int8_t)
SEPT__REGISTER__SERIALIZE(int16_t)
SEPT__REGISTER__SERIALIZE(int32_t)
SEPT__REGISTER__SERIALIZE(int64_t)
SEPT__REGISTER__SERIALIZE(uint8_t)
SEPT__REGISTER__SERIALIZE(uint16_t)
SEPT__REGISTER__SERIALIZE(uint32_t)
SEPT__REGISTER__SERIALIZE(uint64_t)
SEPT__REGISTER__SERIALIZE(float)
SEPT__REGISTER__SERIALIZE(double)
SEPT__REGISTER__SERIALIZE(BoolType_c)
SEPT__REGISTER__SERIALIZE(Sint8Type_c)
SEPT__REGISTER__SERIALIZE(Sint16Type_c)
SEPT__REGISTER__SERIALIZE(Sint32Type_c)
SEPT__REGISTER__SERIALIZE(Sint64Type_c)
SEPT__REGISTER__SERIALIZE(Uint8Type_c)
SEPT__REGISTER__SERIALIZE(Uint16Type_c)
SEPT__REGISTER__SERIALIZE(Uint32Type_c)
SEPT__REGISTER__SERIALIZE(Uint64Type_c)
SEPT__REGISTER__SERIALIZE(Float32Type_c)
SEPT__REGISTER__SERIALIZE(Float64Type_c)


SEPT__REGISTER__DESERIALIZE__POD(bool, Bool_c)
// SEPT__REGISTER__DESERIALIZE__POD(BoolTerm_c, Bool_c) // Can only pick one of bool or BoolTerm_c, where the type is Bool_c.
SEPT__REGISTER__DESERIALIZE__POD(int8_t, Sint8_c)
SEPT__REGISTER__DESERIALIZE__POD(int16_t, Sint16_c)
SEPT__REGISTER__DESERIALIZE__POD(int32_t, Sint32_c)
SEPT__REGISTER__DESERIALIZE__POD(int64_t, Sint64_c)
SEPT__REGISTER__DESERIALIZE__POD(uint8_t, Uint8_c)
SEPT__REGISTER__DESERIALIZE__POD(uint16_t, Uint16_c)
SEPT__REGISTER__DESERIALIZE__POD(uint32_t, Uint32_c)
SEPT__REGISTER__DESERIALIZE__POD(uint64_t, Uint64_c)
SEPT__REGISTER__DESERIALIZE__POD(float, Float32_c)
SEPT__REGISTER__DESERIALIZE__POD(double, Float64_c)

} // end namespace sept
